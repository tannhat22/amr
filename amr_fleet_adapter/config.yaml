# FLEET CONFIG =================================================================
# RMF Fleet parameters

rmf_fleet:
  name: "amr_tayrua"
  limits:
    linear: [0.7, 1.5] # velocity, acceleration
    angular: [0.75, 1.8] # velocity, acceleration
  profile: # Robot profile is modelled as a circle
    footprint: 0.4 # radius in m
    vicinity: 0.5 # radius in m
  reversible: False # whether robots in this fleet can reverse
  battery_system:
    voltage: 24.0 # V
    capacity: 60.0 # Ahr
    charging_current: 12.0 # A
  mechanical_system:
    mass: 100.0 # kg
    moment_of_inertia: 40.0 #kgm^2
    friction_coefficient: 0.22
  ambient_system:
    power: 20.0 # W
  tool_system:
    power: 0.0 # W
  recharge_threshold: 0.10 # Battery level below which robots in this fleet will not operate
  recharge_soc: 0.8 # Battery level to which robots in this fleet should be charged up to during recharging tasks
  max_delay: 15.0 # allowed seconds of delay of the current itinerary before it gets interrupted and replanned
  publish_fleet_state: 5.0 # Publish frequency for fleet state, ensure that it is same as robot_state_update_frequency
  account_for_battery_drain: True
  task_capabilities: # Specify the types of RMF Tasks that robots in this fleet are capable of performing
    loop: True
    delivery: True
    clean: False
  finishing_request: "nothing" # [park, charge, nothing]
  responsive_wait: True # Should responsive wait be on/off for the whole fleet by default? False if not specified.
  charger_server_running: False  # Server charge is running or not
  robots:
    # Here the user is expected to append the configuration for each robot in the fleet.
    amr001:
      charger: "charger001--charge"
    amr002:
      charger: "charger001--charge"
    amr003:
      charger: "charger003--charge"
    amr005:
      charger: "charger004--charge"

fleet_manager:
  ip: "127.0.0.1"
  port: 7001
  user: "some_user"
  password: "some_password"
  robot_state_update_frequency: 10.0


# Docks config:
docks:
  # Here the user is expected to append the configuration for each dock in the fleet
  # rotate_to_dock: Use (-) or (+) to define value
  # rotate_orientation: Use clockwise or counter clockwise
  #                          --------------
  #                          |            |
  #                          |            |
  #                          |   ROBOT    |
  #                          |            |
  #                          |            |
  #                          --------------
  #                              |    |
  #                              |    |
  #                              |    |
  #                              |    |
  #    Clockwise (-)(LEFT) <---- `````` ----> Counter clockwise (+)(RIGHT)

  # /******************** TP2 *********************/
  # LINE 55
  clr55--pickup:
    go_out_dock: [mov:0.90]
    tag_names: [tag_frame_0, tag_frame_2, tag_frame_3]

  clr55--dropoff:
    go_in_dock: [rot:180]
    go_out_dock: [mov:2.5]
    limits:
      rotate_angle: 30
      rotate_orientation: 2 # 0: both, # 1: counter clockwise, 2: clockwise

  line55--pickup:
    go_out_dock: [mov:0.85]
    tag_names: [tag_frame_0, tag_frame_2, tag_frame_3]

  line55--dropoff:
    go_out_dock: [mov:0.65]

  # LINE 56
  clr56--pickup:
    go_out_dock: [mov:0.90]
    tag_names: [tag_frame_4]

  clr56--dropoff:
    go_in_dock: [rot:90]
    go_out_dock: [mov:0.7]

  line56--pickup:
    go_out_dock: [mov:1.3, rot:-90]
    tag_names: [tag_frame_4]
    limits:
      rotate_angle: 30
      rotate_orientation: 0 # 0: both, # 1: counter clockwise, 2: clockwise

  line56--dropoff:
    go_out_dock: [mov:0.4, rot:-90]  
    limits:
      rotate_angle: 45
      rotate_orientation: 1 # 0: both, # 1: counter clockwise, 2: clockwise

  # Chargers
  charger001--charge:
    go_out_dock: [mov:-0.7]

  # /******************** TP3 *********************/
  # Test:
  test--pickup:
    go_out_dock: [mov:0.85]
    tag_names: []
  
  test--dropoff:
    go_out_dock: [mov:0.65]


  # LINE 90
  clr90--pickup:
    go_out_dock: [mov:0.90]
    tag_names: [tag_frame_1]

  clr90--dropoff:
    go_in_dock: [rot:-90]
    go_out_dock: [mov:0.5]

  line90--pickup:
    go_out_dock: [mov:0.85]
    tag_names: [tag_frame_1]

  line90--dropoff:
    go_out_dock: [mov:0.65]

  # LINE 85
  line85--pickup:
    go_in_dock: [rot:180]
    go_out_dock: [mov:0.77, rot:12, mov:1.5]
    tag_names: [tag_frame_1]
    limits:
      rotate_angle: 45
      rotate_orientation: 2 # 0: both, # 1: counter clockwise, 2: clockwise

  line85--dropoff:
    go_out_dock: [mov:0.65]
    limits:
      rotate_angle: 45
      rotate_orientation: 2 # 0: both, # 1: counter clockwise, 2: clockwise

  # Chargers 
  charger003--charge:
    go_in_dock: [rot:0]
    go_out_dock: [mov:-0.7]

  charger004--charge:
    go_in_dock: [rot:0]
    go_out_dock: [mov:-0.7]

  # full dock config:
  # dock_name:
  #   machine_name: nqvlm104
  #   response_state: line90_ins--pickup
  #   go_in_dock: [rot:0]
  #   go_out_dock: [mov:10, rot:30]
  #   tag_names: []
  #   limits:
  #     rotate_angle: 30
  #     rotate_orientation: 2 # 0: both, # 1: counter clockwise, 2: clockwise    


# up: 1.57199 (y), down: -1.57199 (-y), right: 0.0 (x), left: 3.14 (-x) (See map frame below)
#             ^ y
#             |
#             |
#             |
#             |
#            -|----------> x
# Orientation of vertexs defined through map frame coordinate above 
vertexs:
  # ------TP2------:
  tp2_clr_custom_1: 3.14
  park_tp2_001: 3.14
  waiting_for_lift_tp2: 1.57199
  lift001-L1: [1.57199, True]
  # LINE 55:
  clr55_PKFD: 0.0
  clr55_DOFD: -1.57199
  line55_PKFD: 0.0
  line55_DOFD: 0.0
  # LINE 56:
  clr56_PKFD: 0.0
  clr56_DOFD: 0.0
  line56_PKFD: 0.0
  line56_DOFD: 1.57199
  line56_lane_custom1: 0.0
  line56_lane_custom2: -1.57199
  line56_lane_custom3: 3.14

  # ------TP3------:
  testPKFD: -1.57199
  testDOFD: -1.57199
  # LINE 90
  clr90_PKFD: 0.0
  clr90_DOFD: 3.14
  line90_PKFD: -1.57199
  line90_DOFD: -1.57199
  # LINE 85
  line85_PKFD: 1.57199
  line85_DOFD: -1.57199
  waiting_for_lift_tp3: 1.57199
  tp3_lane_custom_1: 0.0
  lift001-L2: [1.57199, True]
