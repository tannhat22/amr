# FLEET CONFIG =================================================================
# RMF Fleet parameters

rmf_fleet:
  name: "amr_tayrua"
  fleet_manager:
    ip: "127.0.0.1"
    port: 22011
    user: "some_user"
    password: "some_password"
  limits:
    # linear: [0.7, 1.5] # velocity, acceleration
    # angular: [0.7, 2.0] # velocity, acceleration
    linear: [1.2, 2.5] # velocity, acceleration
    angular: [1.2, 3.0] # velocity, acceleration
  profile: # Robot profile is modelled as a circle
    footprint: 1.0 # radius in m
    vicinity: 1.2 # radius in m
  reversible: True # whether robots in this fleet can reverse
  battery_system:
    voltage: 24.0 # V
    capacity: 80.0 # Ahr
    charging_current: 17.0 # A
  mechanical_system:
    mass: 6.0 # kg
    moment_of_inertia: 10.0 #kgm^2
    friction_coefficient: 0.22
  ambient_system:
    power: 20.0 # W
  tool_system:
    power: 0.0 # W
  recharge_threshold: 0.10 # Battery level below which robots in this fleet will not operate
  recharge_soc: 0.80 # Battery level to which robots in this fleet should be charged up to during recharging tasks
  publish_fleet_state: 5.0 # Publish frequency for fleet state, ensure that it is same as robot_state_update_frequency
  account_for_battery_drain: True
  task_capabilities: # Specify the types of RMF Tasks that robots in this fleet are capable of performing
    loop: True
    delivery: True
    clean: False
    finishing_request: "nothing" # [park, charge, nothing]
    # action_categories: ["custom_mission_1"]
  
  server_charger_running: True  # Server charge is running or not

# Vdm Robot CONFIG =================================================================

robots:
  # Here the user is expected to append the configuration for each robot in the
  # fleet.
  # Configuration for robot1
  amr001:
    robot_config:
      max_delay: 15.0 # allowed seconds of delay of the current itinerary before it gets interrupted and replanned
    rmf_config:
      robot_state_update_frequency: 5.0
      start:
        map_name: "L1"
        # waypoint: "amr-start"
        orientation: 0.0 # radians
      charger:
        waypoint: "charger001--charge"

# Docks config:
docks:
  # Here the user is expected to append the configuration for each dock in the fleet
  # /******************** TP3 *********************/
  clr90_STR--pickup:
    distance_go_out: 0.9
    rotate_to_dock: -90

  clr90_TTR--dropoff:
    distance_go_out: 0.75
    rotate_to_dock: 180

  # Configuration for line90--pickup:
  line90--pickup:
    distance_go_out: 0.85
    rotate_to_dock: 90

  # Configuration for line90--dropoff:
  line90--dropoff:
    distance_go_out: 0.75
    rotate_to_dock: 90

  # Configuration for tramlay1--pickup:
  tramlay1--pickup:
    distance_go_out: 0.9
    rotate_to_dock: -180

  # Configuration for tramtha1--dropoff:
  tramtha1--dropoff:
    distance_go_out: 0.75
    rotate_to_dock: -180
    # custom_dock:
    #   rotate_angle: 0
    #   rotate_orientation: 0 # 0: both, # 1: counter clockwise, 2: clockwise

  # Configuration for charger001--charge:
  charger001--charge:
    distance_go_out: -0.58
    rotate_to_dock: 0

# up: 1.57199, down: -1.57199, right: 0.0, left: 3.14  
vertexs:
  clr90_TTR_FD: [-1.5719, False]
  clr90_STR_FD: [1.57199, False]
  tramlay1PKFD: [1.57199, False]
  tramtha1DOFD: [1.57199, False]
  line90PKFD: 3.14
  line90DOFD: 3.14
  chargerFD001: 1.57199
  waiting_for_lift_tp2: 1.57199
  waiting_for_lift_tp3: 1.57199
  lift001-L1: [1.57199, True]
  lift001-L2: [1.57199, True]

machines: []
stations: []